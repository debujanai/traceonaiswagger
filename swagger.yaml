openapi: 3.0.0
info:
  title: TraceonAI API
  description: |
    API for TraceonAI with token security data and rug analysis.
    
    ## Tier System
    The API uses a tier-based access system with three levels:
    
    ### Basic Tier
    - Rate limits: 1 request per 10 seconds, 5 requests per minute
    - Access to:
      - `/codereveal` (token security data)
      - `/rugtrace/overview`
      - `/rugtrace/risk-analysis`
    
    ### Pro Tier
    - Rate limits: 2 requests per 10 seconds, 10 requests per minute
    - Access to all Basic tier endpoints plus:
      - `/codereveal/audit` (advanced contract audit)
      - `/rugtrace/wallets-involved`
      - `/rugtrace/liquidity-info`
    
    ### Expert Tier
    - Rate limits: 5 requests per 10 seconds, 20 requests per minute
    - Access to all Pro tier endpoints plus:
      - `/rugtrace/past-rugs`
      - `/rugtrace` (combined analysis)
  version: 1.0.0
servers:
  - url: https://api.traceonai.io
    description: Production server (uses live data)
  
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key
      description: API key for authentication
  
  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
          example: "Error message"
    
    TokenSecurityRequest:
      type: object
      required:
        - address
      properties:
        address:
          type: string
          description: Contract address
          example: "0x1234567890abcdef1234567890abcdef12345678"
        chainId:
          type: string
          description: Chain ID (optional, defaults to "1" - Ethereum)
          example: "1"
    
    ContractAuditRequest:
      type: object
      required:
        - address
      properties:
        address:
          type: string
          description: Contract address
          example: "0x1234567890abcdef1234567890abcdef12345678"
    
    ApiKeyRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Name associated with the API key
          example: "User Name"
        tier:
          type: string
          description: Tier level for the API key (basic, pro, or expert)
          enum: [basic, pro, expert]
          default: basic
          example: "pro"
    
    ApiKeyResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        apiKey:
          type: string
          example: "550e8400-e29b-41d4-a716-446655440000"
        message:
          type: string
          example: "API key generated successfully."
    
    TokenSecurityResponse:
      type: object
      properties:
        result:
          type: object
          properties:
            overview:
              type: object
              properties:
                token_name:
                  type: string
                  example: "Example Token"
                token_symbol:
                  type: string
                  example: "EXT"
                total_supply:
                  type: string
                  example: "10000000000"
                holder_count:
                  type: string
                  example: "3699"
                buy_tax:
                  type: string
                  example: "0"
                sell_tax:
                  type: string
                  example: "0"
                security_risk:
                  type: object
                  properties:
                    level:
                      type: string
                      example: "Low Risk"
                    color:
                      type: string
                      example: "bg-emerald-500"
                creator_info:
                  type: object
                  properties:
                    creator_address:
                      type: string
                      example: "0xb7c08b8a3b9d607422c4319e8f5eaa2fb38a3a70"
                    creator_balance:
                      type: string
                      example: "4243000"
                is_in_cex:
                  type: object
                  properties:
                    listed:
                      type: string
                      example: "1"
                    cex_list:
                      type: array
                      items:
                        type: string
                      example: ["Binance", "Coinbase"]
            security:
              type: object
              properties:
                is_honeypot:
                  type: string
                  example: "0"
                hidden_owner:
                  type: string
                  example: "0"
                can_take_back_ownership:
                  type: string
                  example: "0"
                selfdestruct:
                  type: string
                  example: "0"
                is_blacklisted:
                  type: string
                  example: "0"
                cannot_sell_all:
                  type: string
                  example: "0"
                is_open_source:
                  type: string
                  example: "1"
                is_mintable:
                  type: string
                  example: "0"
                is_anti_whale:
                  type: string
                  example: "0"
                is_proxy:
                  type: string
                  example: "0"
                transfer_pausable:
                  type: string
                  example: "0"
            holders:
              type: object
              properties:
                token_holders:
                  type: array
                  items:
                    type: object
                    properties:
                      address:
                        type: string
                        example: "0x..."
                      tag:
                        type: string
                        example: "Exchange"
                      is_contract:
                        type: integer
                        example: 1
                      is_locked:
                        type: integer
                        example: 0
                      balance:
                        type: string
                        example: "1000000"
                      percent:
                        type: string
                        example: "10.5"
                lp_holders:
                  type: array
                  items:
                    type: object
                    properties:
                      address:
                        type: string
                        example: "0x..."
                      tag:
                        type: string
                        example: "LP Lock"
                      is_contract:
                        type: integer
                        example: 1
                      is_locked:
                        type: integer
                        example: 1
                      balance:
                        type: string
                        example: "500000"
                      percent:
                        type: string
                        example: "75.5"
                lp_holder_count:
                  type: string
                  example: "10"
                lp_total_supply:
                  type: string
                  example: "1000000"
            trading:
              type: object
              properties:
                dex:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        example: "Uniswap V2"
                      liquidity:
                        type: string
                        example: "500000"
                      pair:
                        type: string
                        example: "TOKEN/ETH"
                      liquidity_type:
                        type: string
                        example: "Normal"
    
    ContractAuditResponse:
      type: object
      properties:
        contractAddress:
          type: string
          example: "0x1234567890abcdef1234567890abcdef12345678"
        contractName:
          type: string
          example: "TokenContract"
        compiler:
          type: string
          example: "v0.8.4+commit.c7e474f2"
        securityAnalysis:
          type: object
          properties:
            issues:
              type: array
              items:
                type: object
                properties:
                  title:
                    type: string
                    example: "Reentrancy Risk: Missing Reentrancy Guard"
                  description:
                    type: string
                    example: "The contract makes external calls without using a reentrancy guard.\n\nImpact: May be vulnerable to reentrancy attacks if proper precautions are not taken elsewhere.\n\nRecommendation: Implement a reentrancy guard using the nonReentrant modifier from OpenZeppelin or similar."
                  impact:
                    type: string
                    example: "High"
                  confidence:
                    type: string
                    example: "High"

security:
  - ApiKeyAuth: []

paths:
  /:
    get:
      summary: Welcome message
      description: Returns a welcome message to confirm the API is running
      responses:
        '200':
          description: Welcome message
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Welcome to TraceonAI API"
  
  /api-keys:
    post:
      summary: Generate a new API key
      description: |
        Generates a new API key with the specified tier level.
        This endpoint requires admin authentication.
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiKeyRequest'
      responses:
        '201':
          description: API key generated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    get:
      summary: List all API keys
      description: |
        Lists all API keys in the system.
        This endpoint requires admin authentication.
      security: []
      responses:
        '200':
          description: List of API keys
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  apiKeys:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                          example: "550e8400-e29b-41d4-a716-446655440000"
                        name:
                          type: string
                          example: "User Name"
                        tier:
                          type: string
                          example: "pro"
                        createdAt:
                          type: string
                          format: date-time
                          example: "2023-01-01T00:00:00Z"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /api-keys/{key}:
    delete:
      summary: Revoke an API key
      description: |
        Revokes an existing API key.
        This endpoint requires admin authentication.
      security: []
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
          description: API key to revoke
      responses:
        '200':
          description: API key revoked
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "API key revoked successfully"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /codereveal:
    post:
      summary: Get token security data
      description: |
        Fetches token security data and formats it to match the frontend UI tabs structure.
        Available to all tier levels (Basic, Pro, Expert).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenSecurityRequest'
      responses:
        '200':
          description: Token security data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenSecurityResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /codereveal/audit:
    post:
      summary: Get contract audit
      description: |
        Performs an in-depth security audit of a smart contract by analyzing its source code.
        Requires Pro or Expert tier.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractAuditRequest'
      responses:
        '200':
          description: Contract audit data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractAuditResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden - Insufficient tier level
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /rugtrace:
    post:
      summary: Get all rug analyses
      description: |
        Get all rug analyses in one request.
        Requires Expert tier.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractAuditRequest'
      responses:
        '200':
          description: All rug analyses
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden - Insufficient tier level
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /rugtrace/overview:
    post:
      summary: Get rug analysis overview
      description: |
        Get overview information for rug analysis.
        Available to all tier levels (Basic, Pro, Expert).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractAuditRequest'
      responses:
        '200':
          description: Rug analysis overview
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /rugtrace/risk-analysis:
    post:
      summary: Get risk analysis
      description: |
        Get risk analysis information.
        Available to all tier levels (Basic, Pro, Expert).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractAuditRequest'
      responses:
        '200':
          description: Risk analysis
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /rugtrace/wallets-involved:
    post:
      summary: Get wallets involved
      description: |
        Get information about wallets involved.
        Requires Pro or Expert tier.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractAuditRequest'
      responses:
        '200':
          description: Wallets involved
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden - Insufficient tier level
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /rugtrace/liquidity-info:
    post:
      summary: Get liquidity information
      description: |
        Get liquidity information.
        Requires Pro or Expert tier.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractAuditRequest'
      responses:
        '200':
          description: Liquidity information
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden - Insufficient tier level
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /rugtrace/past-rugs:
    post:
      summary: Get past rugs
      description: |
        Get information about past rugs.
        Requires Expert tier.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractAuditRequest'
      responses:
        '200':
          description: Past rugs information
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden - Insufficient tier level
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error' 